plugins.apply 'fabric-loom'

version = "${property('mod.version')}+${stonecutter.current().version()}"

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    minecraft "com.mojang:minecraft:${stonecutter.current().version()}"
    mappings "net.fabricmc:yarn:${property('deps.yarn')}:v2"

    modImplementation "net.fabricmc:fabric-loader:${property('deps.fabric_loader')}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${property('deps.fabric_api')}"
}

loom {
    accessWidenerPath = file("../../src/main/resources/example.accesswidener")

    runConfigs.server.ideConfigGenerated = false
}
validateAccessWidener.enabled = false

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    archivesBaseName = "${property('mod.name')}-${version}"
}

processResources {
    filesMatching('fabric.mod.json') {
        expand 'mod_version': version, 'target_minecraft': project.property('target')
    }
}

jar {
    archiveClassifier.set 'dev'

    from rootProject.file('LICENSE')
}

if (stonecutter.current().isActiveVersion()) {
    rootProject.tasks.register('buildActive') {
        setGroup 'project'

        dependsOn tasks.getByName('build')
    }
}
